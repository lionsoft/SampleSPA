@import 'mixins';
@import 'consts';

body {
    background-color: @def-background-color;
    font-family: @def-font-family;
    color: rgb(51, 51, 51);
    font-size: @def-font-size;
}

// Стиль для элемента-распорки центрирования блока по вертикали внутри родительского контейнера.
// Пример использования:
//     <div id='контейнер с заданной высотой, внутри которого мы хотим вертикально отцентрировать блок'>
//         <div class='align-middle'>
//             Этот блок будет отцентрирован по вертикали
//         </div>
//         <div class="spacer"></div> <!-- это "распорка" для правильного центрирования -->
//     </div>
.spacer {
    display: inline-block; 
    height: 100%; 
    width: 0; 
    vertical-align: middle;
}
// Выравнивание элемента по центру горизонтали
.align-middle {
    display: inline-block;
    vertical-align: middle;
}

.no-margins {
    margin: 0!important;
}
.no-h-margins {
    margin-left: 0!important;
    margin-right: 0!important;
}
.no-v-margins {
    margin-top: 0!important;
    margin-bottom: 0!important;
}

.overflow-x, [overflow-x] {
    overflow-x: auto;
}
.overflow-y, [overflow-y] {
    overflow-y: auto;
}
.overflow, [overflow] {
    overflow: auto;
}

.relative, [relative] {
    position: relative;
}
.absolute, [absolute] {
    position: absolute;
}

.nowrap, [nowrap] {
    white-space: nowrap; 
}

.truncate {
    .truncate();
}

.truncate-to();


.truncate-to(@i: 1) when (@i =< 80) {
    @px: @i*10;
    .truncate-@{px}px {
        .truncate();
        width: @i*10px!important;
    }
    .max-truncate-@{px}px {
        .truncate();
        max-width: @i*10px!important;
    }
    .truncate-@{i}em {
        .truncate();
        width: @i*1em!important;
    }
    .max-truncate-@{i}em {
        .truncate();
        max-width: @i*1em!important;
    }
    .truncate-to(@i + 1);
}


// Абсолютное позиционирование подсказок об ошибках
.form-group.has-error {
    input.form-control, textarea.form-control {
        position: relative;
    }
    span.red {                     
        position: absolute;
        margin-top: -4px;
        font-size: smaller;
        font-weight: bolder;
    }
}
.has-validation.form-group {
    //margin-bottom: 20px;
}

span.invalid-control-info {
    color: red;
}

.sam-t-space {
    margin-top: @def-v-space; 
}
.sam-b-space {
    margin-bottom: @def-v-space; 
}
.sam-v-space {
    margin-top: @def-v-space; 
    margin-bottom: @def-v-space; 
}

.sam-l-space {
    margin-left: @def-h-space; 
}
.sam-r-space {
    margin-right: @def-h-space; 
}
.sam-h-space {
    margin-left: @def-h-space; 
    margin-right: @def-h-space; 
}

label {
    font-size: 14px;
    font-weight: bold;
}

pre.mark {
    padding: 9.5px;
}